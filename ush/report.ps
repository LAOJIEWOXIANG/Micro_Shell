%!PS-Adobe-3.0
%%Title: header.txt, ush.c, expand.c, builtin.c, defn.h, own_test, run_test
%%For: Yang Zheng
%%Creator: a2ps version 4.14
%%CreationDate: Mon May  1 12:28:45 2023
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 25
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% composite fonts for ASCII-EUC mixed strings
% Version 1.2 1/31/1990
% Original Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 792 def
/sw 612 def
/llx 24 def
/urx 588 def
/ury 768 def
/lly 24 def
/#copies 1 def
/th 20.000000 def
/fnfs 15 def
/bfs 11.547912 def
/cw 6.928747 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   689.410325 th add
def
/pmw 0 def
/pmh 0 def
/v 0 def
/x [
  0
] def
/y [
  pmh ph add 0 mul ph add
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(Yang Zheng) p n
(CS347 Spring23) N
(Assignment3) N
(header.txt) (Page 1/1) (May 01, 23 12:15) title
border
grestore
(Printed by Yang Zheng) rhead
() (1/25) (Monday May 01, 2023) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 2
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(/* CSCI347 Spring23  ) c n
( * Assignment 2) N
( * Modified April 11, 2023 Yang zheng) N
( */) N
() p n
(#include) K
( <stdio.h>) p n
(#include) K
( <string.h>) p n
(#include) K
( <unistd.h>) p n
(#include) K
( <errno.h>) p n
(#include) K
( <stdlib.h>) p n
(#include) K
( <sys/types.h>) p n
(#include) K
( <sys/wait.h>) p n
(#include) K
( <stdbool.h>) p n
(#include) K
( ") p
(defn.h) str
(") p n
() N
(/* Constants */) c
( ) p n
() N
(#define) K
( LINELEN 1024) p n
(int) k
( args = 0;) p n
(int) k
( shift = 0;) p n
(int) k
( arg_count = 0;) p n
(char) k
(** command_line = ) p
(NULL) K
(;) p n
() N
(/* Prototypes */) c n
() p n
(void) k
( processline \() p
(char) k
( *line\);) p n
() N
(void) k
( off_quote\() p
(char) k
( *line\) {) p n
(  ) S
(int) k
( j = 0;) p n
(  ) S
(int) k
( lineLength = strlen\(line\);) p n
(  ) S
(for) K
( \() p
(int) k
( i = 0; i < lineLength; i++\) {) p n
(    ) S
(if) K
( \(line[i] != ') p
(") str
('\) {) p n
(        line[j++] = line[i];) N
(    }) N
(  }) N
(  line[j] = ') S
(\\0) str
(';) p n
(}) N
() N
(/* find the comment and get rid of the comment */) c n
(void) k
( off_comment\() p
(char) k
( *line\) {) p n
(  ) S
(char) k
(* start = line;) p n
(  ) S
(while) K
( \(*start != ') p
(\\0) str
('\) {) p n
(    ) S
(if) K
( \(*start == ') p
(#) str
(' && *\(start - 1\) != ') p
($) str
('\) {) p n
(      *start = ') S
(\\0) str
(';) p n
(      ) S
(break) K
(;) p n
(    }) N
(    start++;) N
(  }) N
(}) N
() N
(bool is_empty_or_spaces\() S
(char) k
( *line\) {) p n
(    ) S
(int) k
( i = 0;) p n
(    ) S
(while) K
( \(line[i] != ') p
(\\0) str
('\) {) p n
(        ) S
(if) K
( \(line[i] != ') p
( ) str
(' && line[i] != ') p
(\\t) str
(' && line[i] != ') p
(\\n) str
('\) {) p n
(            ) S
(return) K
( false;  ) p
(// found non-space character, line is not empty or fu) c n
(ll of spaces) N
(        }) p n
(        i++;) N
(    }) N
(ush.c) (Page 1/5) (May 01, 23 12:16) title
border
grestore
(Printed by Yang Zheng) rhead
() (Monday May 01, 2023) (2/25) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2) 3
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(return) K
( true;  ) p
(// end of line reached without finding non-space character, li) c n
(ne is empty or full of spaces) N
(}) p n
() N
(char) k
(** arg_parse \() p
(char) k
( *line, ) p
(int) k
( *argcptr\) {) p n
(  ) S
(int) k
( count = 1;) p n
(  ) S
(int) k
( i = 0;) p n
(  bool no_quote = true;) N
(  ) S
(int) k
( length = strlen\(line\);) p n
() N
(  ) S
(while) K
( \(line[i] != 0 && i < length\) {) p n
(    ) S
(if) K
( \(line[i] != ') p
( ) str
('\) {) p n
(      ) S
(while) K
( \(line[i] != 0 && i < length\) {) p n
() S 8 T (      ) S
(if) K
( \(line[i] == ') p
(") str
('\) {) p n
(          no_quote = !no_quote;) N
(        }) N
(        ) S
(if) K
( \(line[i] == ') p
( ) str
('\) {) p n
(          ) S
(if) K
( \(no_quote == false\) { ) p
(// if we have read a \\", don't do anything) c n
(            ;) p n
(          } ) S
(else) K
( {) p n
(            count++;) N
(            ) S
(break) K
(;) p n
(          }) N
(        }) N
(        i++;) N
(      }) N
(      i++;) N
(    } ) S
(else) K
( {) p n
(      i++;) N
(    }) N
(  }) N
() N
(  ) S
(if) K
( \(no_quote == false\) {) p n
(    fprintf\(stderr, ") S
(No matching double quotes) str
("\);) p n
(  }) N
() N
(  i = 0;) N
(  ) S
(int) k
( j = 0;) p n
(  ) S
(char) k
(** arr = \() p
(char) k
(**\) malloc \(\(count + 1\) * ) p
(sizeof) K
(\() p
(char) k
(*\)\);) p n
(  ) S
(if) K
( \(arr == ) p
(NULL) K
(\) {) p n
(     fprintf \(stderr, ") S
(Failed to malloc) str
("\);) p n
(  }) N
(  ) N
(  ) S
(while) K
( \(line[i] != 0 && i < length\) {) p n
(    ) S
(if) K
( \(line[i] != ') p
( ) str
('\) {) p n
(      arr[j] = &line[i];) N
(      j++;) N
(      ) S
(while) K
( \(line[i] != 0 && i < length\) {) p n
() S 8 T (      ) S
(if) K
( \(line[i] == ') p
(") str
('\) {) p n
(          no_quote = !no_quote;) N
(        }) N
(        ) S
(if) K
( \(line[i] == ') p
( ) str
('\) {) p n
(          ) S
(if) K
( \(no_quote == false\) { ) p
(// if we have read a \\", don't do anything) c n
(            ;) p n
(          } ) S
(else) K
( {) p n
(            line[i] = 0;) N
(            ) S
(break) K
(;) p n
(          }) N
(        }) N
(ush.c) (Page 2/5) (May 01, 23 12:16) title
border
grestore
(Printed by Yang Zheng) rhead
() (3/25) (Monday May 01, 2023) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 4
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(        i++;) p n
(      }) N
(      i++;) N
(    } ) S
(else) K
( {) p n
(      i++;) N
(    }) N
(  }) N
() N
(  ) S
(for) K
( \() p
(int) k
( i = 0; i < j; i++\) {) p n
(    off_quote\(arr[i]\);) N
(  }) N
() N
(  arr[count] = ) S
(NULL) K
(;) p n
(  *argcptr = count;) N
() N
(  ) S
(// for \(int i = 0; i < count; i++\) {) c n
(  ) p
(//   printf\("arr[%d]: %s\\n", i, arr[i]\);) c n
(  ) p
(// }) c n
(  ) p
(return) K
( arr;) p n
(}) N
() N
() N
(/* Shell main */) c n
(int) k n
(main \() p
(int) k
( argc, ) p
(char) k
( **argv\)) p n
({) N
(  ) S
(// for \(int i = 0; i < argc; i++\) {) c n
(  ) p
(//   printf\("argv[%d]: %s\\n", i, argv[i]\);) c n
(  ) p
(// }) c n
(  arg_count = argc - 1;) p n
(  args = argc - 1; ) S
(//  args starts from index 2 to index n - 1 of the command li) c n
(ne) N
(  command_line = argv;) p n
(  ) S
(char) k
( buffer[LINELEN];) p n
(  ) S
(int) k
( len;) p n
(  ) S
(FILE) k
(* read;) p n
(  ) S
(if) K
( \(argc == 1\) {) p n
(    read = stdin;) N
(  } ) S
(else) K
( {) p n
(    ) S
(// char* filename = argv[1];) c n
(    read = fopen\(argv[1], ") p
(r) str
("\);) p n
(    ) S
(if) K
( \(read == ) p
(NULL) K
(\) {) p n
(      fprintf\(stderr, ") S
(Failed to open file %s\\n) str
(", argv[1]\);) p n
(      exit\(127\);) N
(    }) N
(  }) N
(  ) S
(while) K
( \(1\) {) p n
() N
(    ) S
(/* prompt and get line */) c n
(    ) p
(if) K
( \(read == stdin\) {) p n
(      fprintf \(stderr, ") S
(%% ) str
("\);) p n
(    }) N
() N
(    ) S
(if) K
( \(fgets \(buffer, LINELEN, read\) != buffer\) {) p n
(      ) S
(break) K
(;) p n
(    }) N
() N
(    ) S
(if) K
( \(!is_empty_or_spaces\(buffer\)\) {) p n
(      ) S
(/* Get rid of \\n at end of buffer. */) c n
(ush.c) (Page 3/5) (May 01, 23 12:16) title
border
grestore
(Printed by Yang Zheng) rhead
() (Monday May 01, 2023) (4/25) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (4) 5
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(      ) p
(// printf\("buffer: %s\\n", buffer\);) c n
(      len = strlen\(buffer\);) p n
(      ) S
(if) K
( \(buffer[len-1] == ') p
(\\n) str
('\)) p n
(          buffer[len-1] = 0;) N
(      off_comment\(buffer\);) N
(      ) S
(/* Run it ... */) c n
(      processline \(buffer\);) p n
(    }) N
(    ) S
(if) K
( \(feof\(read\)\) {) p n
(      ) S
(break) K
(;) p n
(    }) N
(  }) N
() N
(  ) S
(if) K
( \(!feof\(read\)\) {) p n
(    perror \(") S
(read) str
("\);) p n
(  }) N
() N
(  fclose\(read\);) N
(  ) S
(return) K
( 0;) p 16 T () S 24 T () S
(/* Also known as exit \(0\); */) c
( ) p n
(}) N
() N
() N
(void) k
( processline \() p
(char) k
( *line\)) p n
({) N
(    pid_t  cpid;) N
(    ) S
(int) k
(    status;) p n
() N
(    ) S
(char) k
( newLine[LINELEN] = {0};) p n
(    ) S
(int) k
( condition = expand\(line, newLine, LINELEN\);) p n
(    ) S
(// printf\("newLine: %s\\n", newLine\);) c n
(    ) p
(if) K
( \(condition == -1\) { ) p
(// if expand failed, print error message) c n
(      fprintf\(stderr, ") p
(Expand failed\\n) str
("\);) p n
(      ) S
(return) K
(;) p n
(    }) N
() N
(    ) S
(int) k
( argc = 0;) p n
(    ) S
(char) k
(** p_arr = arg_parse\(newLine, &argc\);) p n
(    ) S
(// printf\("p_arr[0]: %s\\n", p_arr[0]\);) c n
(    ) p
(if) K
( \(newLine == ) p
(NULL) K
( || p_arr[0] == ) p
(NULL) K
(\) {) p n
(      ) S
(return) K
(;) p n
(    }) N
(    ) N
(    ) S
(/* check if new line contains builtin command before fork */) c n
(    ) p
(if) K
( \(exec_builtin\(p_arr\) < 0\) {) p n
(      ) S
(/* Start a new process to do the job. */) c n
(      cpid = fork\(\);) p n
(      ) S
(if) K
( \(cpid < 0\) {) p n
(        ) S
(/* Fork wasn't successful */) c n
(        perror \(") p
(fork) str
("\);) p n
(        ) S
(return) K
(;) p n
(      }) N
(      ) N
(      ) S
(/* Check for who we are! */) c n
(      ) p
(if) K
( \(cpid == 0\) {) p n
(        ) S
(/* We are the child! */) c n
(        ) p
(// printf\("p_arr[0]: %s\\n", p_arr[0]\);) c n
(        execvp\(p_arr[0], p_arr\);) p n
(        ) N
(        ) S
(/* execlp reurned, wasn't successful */) c n
(ush.c) (Page 4/5) (May 01, 23 12:16) title
border
grestore
(Printed by Yang Zheng) rhead
() (5/25) (Monday May 01, 2023) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5) 6
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(        perror \(") p
(exec) str
("\);) p n
(        fclose\(stdin\);  ) S
(// avoid a linux stdio bug) c n
(        exit \(127\);) p n
(      }) N
() N
(      ) S
(/* free pointer array */) c n
(      free\(p_arr\);) p n
(      p_arr = ) S
(NULL) K
(;) p n
(      ) N
(      ) S
(/* Have the parent wait for child to complete */) c n
(      ) p
(if) K
( \(wait \(&status\) < 0\) {) p n
(        ) S
(/* Wait wasn't successful */) c n
(        perror \(") p
(wait) str
("\);) p n
(      }) N
(    } ) S
(else) K
( {) p n
(      ) S
(// free\(p_arr\);) c n
(      ) p
(// p_arr = NULL;) c n
(      ;) p n
(    }) N
(    ) N
(}) N
() N
() N
() N
() N
() N
(ush.c) (Page 5/5) (May 01, 23 12:16) title
border
grestore
(Printed by Yang Zheng) rhead
() (Monday May 01, 2023) (6/25) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 7
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <stdio.h>) p n
(#include) K
( <string.h>) p n
(#include) K
( <stdbool.h>) p n
(#include) K
( <stdlib.h>) p n
(#include) K
( <unistd.h>) p n
(#include) K
( <ctype.h>) p n
(#include) K
( <dirent.h>) p n
(#include) K
( ") p
(defn.h) str
(") p n
() N
(int) k
( result = 0; ) p
(//  result of expand) c n
() p n
(void) k
( cat\() p
(char) k
(* new, ) p
(char) k
(* to_cat, ) p
(int) k
(* space\) {) p n
(    ) S
(// printf\("space: %d, to_cat: %d, new: %d\\n", *space, strlen\(to_cat\), strlen) c n
(\(new\)\);) N
(    ) p
(if) K
( \(strlen\(to_cat\) + strlen\(new\) <= *space\) {) p n
(        strcat\(new, to_cat\);) N
(        *space -= strlen\(to_cat\);) N
(    } ) S
(else) K
( {) p n
(        fprintf\(stderr, ") S
(No enough space to add\\n) str
("\);) p n
(    }) N
(}) N
() N
(int) k
( expand \() p
(char) k
( *orig, ) p
(char) k
( *new, ) p
(int) k
( newsize\) {) p n
(    ) S
(// need a pointer points to the first char of NAME) c n
(    ) p
(char) k
( *name = orig;) p n
() N
(    ) S
(// another pointer finds the first '}' and set it to '\\0') c n
(    ) p
(char) k
( *end = orig;) p n
(    ) S
(char) k
(* value = 0; ) p
(// the value of the environment variable) c n
(    ) p
(char) k
( pid_str[16] = {0};) p n
(    ) S
(int) k
( space = newsize;) p n
(    bool has_quote = false; ) S
(//  if we read a ${, we set it to true) c n
(    ) p
(// printf\("orig: %s\\n", orig\);) c n
(    ) p
(if) K
( \(orig[5] == ') p
(}) str
('\) {) p n
(        printf\(") S
(fuck\\n) str
("\);) p n
(    }) N
(    ) S
(while) K
( \(*name != ') p
(\\0) str
(' && *end != ') p
(\\0) str
('\) {) p n
(        ) S
(while) K
( \(*name != ') p
({) str
('\) {) p n
(            ) S
(if) K
( \(*name == ') p
(\\0) str
('\) { ) p
(//  if we never read a {) c n
(                ) p
(if) K
( \(new[strlen\(new\) - 1] == ') p
( ) str
('\) {) p n
(                    new[strlen\(new\) - 1] = ') S
(\\0) str
(';) p n
(                }) N
(                ) S
(return) K
( result;) p n
(            }) N
(            ) S
(if) K
( \(*name == ') p
($) str
('\){) p n
(                name++;) N
(                ) S
(if) K
( \(*name == ') p
($) str
('\) { ) p
(//  this will increment name) c n
(                    ) p
(if) K
( \(sprintf\(pid_str, ") p
(%d) str
(", getpid\(\)\) >= 0\) {) p n
(                        cat\(new, pid_str, &space\);) N
(                    } ) S
(else) K
( {) p n
(                        fprintf\(stderr, ") S
(failed to get pid) str
("\);) p n
(                        result = -1;) N
(                        ) S
(return) K
( result;) p n
(                    }) N
(                } ) S
(else) K
( ) p
(if) K
( \(*name == ') p
({) str
('\) {) p n
(                    has_quote = !has_quote;) N
(                    ) S
(break) K
(;) p n
(                } ) S
(else) K
( ) p
(if) K
( \(isdigit\(*name\)\) {) p n
(                    ) S
(char) k
( num[10] = {0};) p n
(expand.c) (Page 1/4) (May 01, 23 12:16) title
border
grestore
(Printed by Yang Zheng) rhead
() (7/25) (Monday May 01, 2023) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2) 8
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(                    ) p
(if) K
( \(args > 0\) {) p n
(                        ) S
(while) K
( \(isdigit\(*name\)\) {) p n
(                            ) S
(char) k
( n = *name;) p n
(                            strcat\(num, &n\);) N
(                            name++;) N
(                        }) N
(                        ) S
(int) k
( pattern_n = atoi\(num\);) p n
(                        ) S
(if) K
( \(pattern_n >= args\) {) p n
(                            cat\(new, "", &space\);) N
(                        } ) S
(else) K
( {) p n
(                            cat\(new, command_line[pattern_n + 1 + shift], &space) N
(\); ) S
(//  out of bounds?) c n
(                        }) p n
(                        name--;) N
(                    } ) S
(else) K
( { ) p
(// interactive mode) c n
(                        ) p
(if) K
( \(atoi\(num\) == 0\) {) p n
(                            cat\(new, ") S
(./ush) str
(", &space\);) p n
(                        } ) S
(else) K
( {) p n
(                            cat\(new, "", &space\);) N
(                        }) N
(                    }) N
(                } ) S
(else) K
( ) p
(if) K
( \(*name == ') p
(#) str
('\) {) p n
(                    ) S
(char) k
( pound[3] = {0};) p n
(                    ) S
(if) K
( \(args > 0\) {) p n
(                        ) S
(if) K
( \(sprintf\(pound, ") p
(%d) str
(", args\) >= 0\) {) p n
(                            cat\(new, pound, &space\);) N
(                        } ) S
(else) K
( {) p n
(                            fprintf\(stderr, ") S
(failed to get #) str
("\);) p n
(                            result = -1;) N
(                            ) S
(return) K
( result;) p n
(                        }) N
(                    } ) S
(else) K
( {) p n
(                        cat\(new, ") S
(1) str
(", &space\);) p n
(                    }) N
(                } ) S
(else) K
( { ) p
(//  if we read a $ that is not a ${ or $$, we do nothin) c n
(g) N
(                    name--;) p n
(                    cat\(new, name, &space\);) N
(                    ) S
(return) K
( result;) p n
(                }) N
(            } ) S
(else) K
( ) p
(if) K
( \(*name == ') p
(*) str
('\) {) p n
(                end = \(name + 1\);) N
(                ) S
(char) k
(* r_express = \(name + 1\);) p n
(                DIR *dir;) N
(                ) S
(struct) k
( dirent *ent;) p n
(                dir = opendir\(") S
(.) str
("\);) p n
(                bool reached_end = false;) N
(                ) S
(if) K
( \(*end == ') p
( ) str
(' || *end == ') p
(\\0) str
('\) { ) p
(//  if there is no pattern) c n
(                    r_express = "";) p n
(                } ) S
(else) K
( {) p n
(                    ) S
(while) K
( \(*end != ') p
( ) str
(' && *end != ') p
(\\0) str
('\) {) p n
(                        end++;) N
(                    }) N
(                    ) S
(if) K
( \(*end == ') p
( ) str
('\) {) p n
(                        *end = ') S
(\\0) str
(';) p n
(                    } ) S
(else) K
( {) p n
(                        reached_end = true;) N
(                    }) N
(                }) N
(expand.c) (Page 2/4) (May 01, 23 12:16) title
border
grestore
(Printed by Yang Zheng) rhead
() (Monday May 01, 2023) (8/25) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 9
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(                ) S
(if) K
( \(dir != ) p
(NULL) K
(\) {) p n
(                    bool matched = false;) N
(                    ) S
(if) K
( \(strchr\(r_express, ') p
(/) str
('\) != ) p
(NULL) K
(\) {) p n
(                            fprintf\(stderr, ") S
(can't include /\\n) str
("\);) p n
(                            result = -1;) N
(                            ) S
(return) K
( result;) p n
(                    } ) N
(                    ) S
(while) K
( \(\(ent = readdir\(dir\)\) != ) p
(NULL) K
(\) {) p n
(                        ) S
(if) K
( \(strcmp\(ent->d_name + strlen\(ent->d_name\) - strlen\(r_) p n
(express\), r_express\) == 0 ) N
(                        && ent->d_name[0] != ') S
(.) str
('\) {) p n
(                            matched = true;) N
(                            cat\(new, ent->d_name, &space\);) N
(                            cat\(new, ") S
( ) str
(", &space\);) p n
(                        }) N
(                    }) N
(                    ) S
(if) K
( \(matched == false\) { ) p
(//  if we can't find matching files) c n
(                        cat\(new, r_express, &space\);) p n
(                    }) N
(                    closedir\(dir\);) N
(                } ) S
(else) K
( {) p n
(                    perror\(") S
(Failed to open directory) str
("\);) p n
(                    result = -1;) N
(                    ) S
(return) K
( result;) p n
(                }) N
(                ) S
(if) K
( \(reached_end\) {) p n
(                    ) S
(if) K
( \(new[strlen\(new\) - 1] == ') p
( ) str
('\) {) p n
(                        new[strlen\(new\) - 1] = ') S
(\\0) str
(';) p n
(                    }) N
(                    ) S
(// printf\("here\\n"\);) c n
(                    ) p
(break) K
(;) p n
(                } ) S
(else) K
( {) p n
(                    name = end;) N
(                    *end = ') S
( ) str
(';) p n
(                    ) N
(                }) N
(            } ) S
(else) K
( ) p
(if) K
( \(*name == ') p
(\\\\) str
('\) {) p n
(                ) S
(if) K
( \(*\(name + 1\) == ') p
(*) str
('\) {) p n
(                    cat\(new, ") S
(*) str
(", &space\);) p n
(                }) N
(                ) S
(while) K
( \(*name != ') p
( ) str
(' && *name != ') p
(\\0) str
('\) {) p n
(                    name++;) N
(                }) N
(                ) S
(if) K
( \(*name == ') p
(\\0) str
('\) {) p n
(                    ) S
(break) K
(;) p n
(                }) N
(            } ) S
(else) K
( {) p n
(                ) S
(char) k
( append[1] = {0};) p n
(                append[0] = orig[name - orig];) N
(                append[1] = ') S
(\\0) str
(';) p n
(                cat\(new, append, &space\);) N
(                ) S
(if) K
( \(*name != ') p
( ) str
(' && *\(name + 1\) == ') p
(*) str
('\) {) p n
(                    cat\(new, ") S
(*) str
(", &space\);) p n
(                    name++;) N
(                }) N
(                ) N
(            }) N
(            name++;) N
(expand.c) (Page 3/4) (May 01, 23 12:16) title
border
grestore
(Printed by Yang Zheng) rhead
() (9/25) (Monday May 01, 2023) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (4) 10
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(        }) p n
(        ) S
(// printf\("end: %c\\n", *end\);) c n
(        ) p
(// printf\("break\\n"\);) c n
(        name++;) p n
(        ) S
(// end = name;) c n
(        ) p
(//set the last char of orig to '\\0', now name points to a string) c n
(        ) p
(if) K
( \(has_quote == true\) {) p n
(            ) S
(while) K
( \(*end != ') p
(}) str
('\) {) p n
(                printf\(") S
(end is at: %ld\\n) str
(", end - orig\);) p n
(                ) S
(if) K
( \(*end == ') p
(\\0) str
('\) {) p n
(                    fprintf\(stderr, ") S
(Error: missing '}'\\n) str
("\);) p n
(                    result = -1;) N
(                    ) S
(return) K
( result;) p n
(                }) N
(                end++;) N
(            }) N
(            *end = ') S
(\\0) str
(';) p n
(            value = getenv\(name\);) N
(            ) S
(if) K
( \(value == ) p
(NULL) K
(\) {) p n
(                cat\(new, "", &space\);) N
(            } ) S
(else) K
( {) p n
(                cat\(new, value, &space\);) N
(            }) N
(            *end = ') S
(}) str
('; ) p
(// set it back to '}) c n
(            end++;) p n
(            name = end;) N
(        }) N
(    }) N
(    result = 1;) N
(    ) S
(return) K
( result;) p n
(}) N
(expand.c) (Page 4/4) (May 01, 23 12:16) title
border
grestore
(Printed by Yang Zheng) rhead
() (Monday May 01, 2023) (10/25) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 11
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <stdio.h>) p n
(#include) K
( <string.h>) p n
(#include) K
( <stdlib.h>) p n
(#include) K
( <errno.h>) p n
(#include) K
( <unistd.h>) p n
(#include) K
( <sys/stat.h>) p n
(#include) K
( <pwd.h>) p n
(#include) K
( <grp.h>) p n
(#include) K
( <time.h>) p n
(#include) K
( ") p
(defn.h) str
(") p n
() N
(static) K
( ) p
(char) k
(* list[] = {") p
(exit) str
(", ") p
(envset) str
(", ") p
(envunset) str
(", ") p
(cd) str
(", ") p
(shift) str
(", ") p
(unshift) str
(", ") p
(sstat) str
("};) p n
(typedef) K
( ) p
(void) k
( \(*funcPtr\) \(\);) p n
(static) K
( ) p
(int) k
( is_builtin;) p n
(static) K
( ) p
(char) k
(** command;) p n
() N
(void) k
( exec_exit\(\) {) p n
(    ) S
(if) K
( \(command[1] == ) p
(NULL) K
(\) {) p n
(        free\(command\);) N
(        command = ) S
(NULL) K
(;) p n
(        exit\(0\);) N
(    } ) S
(else) K
( {) p n
(        ) S
(int) k
( exit_value = atoi\(command[1]\);) p n
(        free\(command\);) N
(        command = ) S
(NULL) K
(;) p n
(        ) S
(if) K
( \(exit_value == 0\) {) p n
(            fprintf\(stderr, ") S
(not given a valid exit value) str
("\);) p n
(            ) S
(// is_builtin = -1;) c n
(            ) p
(// return is_builtin;) c n
(        }) p n
(        exit\(exit_value\);) N
(    }) N
(}) N
() N
(void) k
( exec_envset\(\) {) p n
(    ) S
(char) k
(* new_value = command[2];) p n
(    ) S
(int) k
( ret = setenv\(command[1], new_value, 1\);) p n
(     ) S
(if) K
( \(ret != 0\) {) p n
(        perror\(") S
(setenv) str
("\);) p n
(        ) S
(return) K
(;) p n
(    }) N
(}) N
() N
(void) k
( exec_envunset\(\) {) p n
(    ) S
(if) K
( \(unsetenv\(command[1]\) == -1\) {) p n
(        perror\(") S
(envunset) str
("\);) p n
(        ) S
(return) K
(;) p n
(    }) N
(}) N
() N
(void) k
( exec_cd\(\) {) p n
(    ) S
(int) k
( result = 0;) p n
(    ) S
(if) K
( \(command[1] == ) p
(NULL) K
(\) {) p n
(        result = chdir\(getenv\(") S
(HOME) str
("\)\);) p n
(    } ) S
(else) K
( {) p n
(        result = chdir\(command[1]\);) N
(    }) N
(    ) S
(if) K
( \(result != 0\) {) p n
(        perror\(") S
(chdir) str
("\);) p n
(builtin.c) (Page 1/3) (May 01, 23 1:46) title
border
grestore
(Printed by Yang Zheng) rhead
() (11/25) (Monday May 01, 2023) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2) 12
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(        ) p
(// is_builtin = -1;) c n
(        ) p
(// return is_builtin;) c n
(    }) p n
(}) N
() N
(void) k
( exec_shift\(\) {) p n
(    ) S
(if) K
( \(command[1] == ) p
(NULL) K
(\) {) p n
(        shift = 1;) N
(    } ) S
(else) K
( {) p n
(        shift = atoi\(command[1]\);) N
(    }) N
(    ) S
(if) K
( \(\(args - shift\) < 0\) {) p n
(        fprintf\(stderr, ") S
(can't shift that many arguments\\n) str
("\);) p n
(        ) S
(// is_builtin = -1;) c n
(        ) p
(// return is_builtin;) c n
(    } ) p
(else) K
( {) p n
(        args = args - shift;) N
(    }) N
(}) N
() N
(void) k
( exec_unshift\(\) {) p n
(    ) S
(if) K
( \(command[1] != ) p
(NULL) K
(\) { ) p
(//  if we were given the unshift value) c n
(        ) p
(if) K
( \(atoi\(command[1]\) > shift\) {) p n
(            fprintf\(stderr, ") S
(can't unshift that many arguments\\n) str
("\);) p n
(            ) S
(// is_builtin = -1;) c n
(            ) p
(// return is_builtin;) c n
(        }) p n
(        args += atoi\(command[1]\);) N
(        shift -= atoi\(command[1]\);) N
(    } ) S
(else) K
( {) p n
(        args = arg_count;) N
(        shift = 0;) N
(    }) N
(   ) N
(}) N
(void) k
( exec_sstat\(\) {) p n
(    ) S
(char) k
( perms[11];) p n
(    ) S
(struct) k
( stat st;) p n
(    ) S
(for) K
( \() p
(int) k
( i = 1; i < ) p
(sizeof) K
(\(command\); i++\) {) p n
(        ) S
(if) K
( \(stat\(command[i], &st\) == 0\) {) p n
(            printf\(") S
(%s ) str
(", command[i]\); ) p
(//  print file name) c n
() p n
(            ) S
(struct) k
( passwd *pwd = getpwuid\(st.st_uid\);) p n
(            ) S
(if) K
( \(pwd == ) p
(NULL) K
(\) { ) p
(//  print user name) c n
(                printf\(") p
(%u ) str
(", st.st_uid\);) p n
(            } ) S
(else) K
( {) p n
(                printf\(") S
(%s ) str
(", pwd->pw_name\);) p n
(            }) N
() N
(            ) S
(struct) k
( group *grp = getgrgid\(st.st_gid\); ) p
(// print group name) c n
(            ) p
(if) K
( \(grp == ) p
(NULL) K
(\) {) p n
(                printf\(") S
(%u ) str
(", st.st_gid\);) p n
(            } ) S
(else) K
( {) p n
(                printf\(") S
(%s ) str
(", grp->gr_name\);) p n
(            }) N
(            ) N
(            strmode\(st.st_mode, perms\); ) S
(//  print permission) c n
(            printf\(") p
(%s ) str
(", perms\);) p n
() N
(builtin.c) (Page 2/3) (May 01, 23 1:46) title
border
grestore
(Printed by Yang Zheng) rhead
() (Monday May 01, 2023) (12/25) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 13
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(            printf\(") p
(%lu ) str
(", st.st_nlink\); ) p
(//  print number of links") c n
(            printf\(") p
(%lu ) str
(", st.st_size\); ) p
(//  print size) c n
(            printf\(") p
(%s\\n) str
(", asctime\(localtime\(&st.st_mtime\)\)\); ) p
(//  print last mod) c n
(ified time) N
(        }) p n
(    }) N
() N
(}) N
() N
(int) k
( exec_builtin\() p
(char) k
(** line\) {) p n
(    funcPtr flist[] = {exec_exit, exec_envset, exec_envunset, exec_cd, exec_shif) N
(t, exec_unshift, exec_sstat};) N
(    command = line;) N
(    is_builtin = 1;) N
(    ) S
(for) K
( \() p
(int) k
( i = 0; i < ) p
(sizeof) K
(\(list\)/) p
(sizeof) K
(\(list[0]\); i++\) {) p n
(        ) S
(if) K
( \(strcmp\(command[0], list[i]\) == 0\) {) p n
(            flist[i]\(\);) N
(            ) S
(// is_builtin = 1;) c n
(            free\(command\);) p n
(            command = ) S
(NULL) K
(;) p n
(            ) S
(return) K
( is_builtin;) p n
(        }) N
(    }) N
(    ) S
(/* didn't find a builtin command */) c n
(    is_builtin = -1;) p n
(    ) S
(return) K
( is_builtin;) p n
(}) N
(builtin.c) (Page 3/3) (May 01, 23 1:46) title
border
grestore
(Printed by Yang Zheng) rhead
() (13/25) (Monday May 01, 2023) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 14
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#include) K
( <sys/stat.h>) p n
() N
(int) k
( expand \() p
(char) k
( *orig, ) p
(char) k
( *new, ) p
(int) k
( newsize\);) p n
(int) k
( exec_builtin\() p
(char) k
(** line\);) p n
(void) k
( strmode\(mode_t mode, ) p
(char) k
( *p\);) p n
(extern) K
( ) p
(int) k
( args;) p n
(extern) K
( ) p
(int) k
( shift;) p n
(extern) K
( ) p
(int) k
( arg_count;) p n
(extern) K
( ) p
(char) k
(** command_line;) p
(defn.h) (Page 1/1) (Apr 30, 23 20:15) title
border
grestore
(Printed by Yang Zheng) rhead
() (Monday May 01, 2023) (14/25) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 15
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(Script started on 2023-05-01 12:19:02-07:00 [TERM="xterm-256color" TTY="/dev/pts) p n
(/0" COLUMNS="190" LINES="17"]) N
(^[[?2004h^[]0;zhengy@cf162-07: ~/csci347/csci347_s23/ush^G^[[01;32mzhengy@cf162-) N
(07^[[00m:^[[01;34m~/csci347/csci347_s23/ush^[[00m$ ./ush) N
(^[[?2004l) N
(% echo #this is my own test) N
() N
(% echo *) N
(strmode.c expand.o 3adc test_script a2report.pdf 3.h 4a?c builtin.c a2.pdf scr4.) N
(txt subdir a2_test 2acc d.cc printArg.c~ e.b report.ps~ b.c Makefile ush.o f.q a) N
(1.ps printArg test 1abc own_test fully report.ps a2.ps a1.ps~ a.c c..c a2.ps~ st) N
(rmode.o expand.c printArg.c builtin.o report.pdf aaaaaaa.c script-nq #ush.c#~ us) N
(h ush.c header.txt a2report.ps showshift.txt test.c testa2 defn.h a1.pdf) N
(% echo *.c *.o) N
(strmode.c builtin.c b.c a.c c..c expand.c printArg.c aaaaaaa.c ush.c test.c expa) N
(nd.o ush.o strmode.o builtin.o) N
(% sstat showshift.txt) N
(showshift.txt zhengy grp.csci.Students -rw-r--r--  1 414 Sun Apr 30 23:39:57 202) N
(3) N
() N
(% echo a*) N
(a*) N
(% eho^H ^H^H ^Hcho c*) N
(c*) N
(% echo \\*) N
(*) N
(% echo ?^H ^H/*) N
(/*) N
(% echo */) N
(can't include /) N
(Expand failed) N
(% ss^H ^H^H ^H^C) N
(^[[?2004h^[]0;zhengy@cf162-07: ~/csci347/csci347_s23/ush^G^[[01;32mzhengy@cf162-) N
(07^[[00m:^[[01;34m~/csci347/csci347_s23/ush^[[00m$ ./ush showshift.txt a b c d  ) N
(^H^[[Ke f) N
(^[[?2004l) N
(showshift is named showshift.txt) N
(Number of arguments is 7.) N
(Argument 1 is a.) N
(Argument 2 is b.) N
(Argument 3 is c.) N
(Argument 4 is d.) N
(Number of arguments is 4.) N
(Argument 1 is d.) N
(Argument 2 is e.) N
(Argument 3 is f.) N
(Argument 4 is .) N
(Number of arguments is 5.) N
(Argument 1 is c.) N
(Number of arguments is 7.) N
(Now a is Argument 1.) N
(^[[?2004h^[]0;zhengy@cf162-07: ~/csci347/csci347_s23/ush^G^[[01;32mzhengy@cf162-) N
(07^[[00m:^[[01;34m~/csci347/csci347_s23/ush^[[00m$ exit) N
(^[[?2004l) N
(exit) N
() N
(Script done on 2023-05-01 12:20:54-07:00 [COMMAND_EXIT_CODE="0"]) N
(own_test) (Page 1/1) (May 01, 23 12:20) title
border
grestore
(Printed by Yang Zheng) rhead
() (15/25) (Monday May 01, 2023) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 16
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(Script started on 2023-05-01 12:21:08-07:00 [TERM="xterm-256color" TTY="/dev/pts) p n
(/0" COLUMNS="190" LINES="17"]) N
(^[[?2004h^[]0;zhengy@cf162-07: ~/csci347/csci347_s23/ush^G^[[01;32mzhengy@cf162-) N
(07^[[00m:^[[01;34m~/csci347/csci347_s23/ush^[[00m$ ./ius^H^[[K^H^[[K^H^[[K^H^[[K) N
(ush^H^[[K^H^[[K^H^[[K/ush) N
(^[[?2004l) N
(% cd  /home/phil/public/csci347/testa2^H3) N
(% ./try -H) N
(mkdir: cannot create directory \342M-^@M-^X/home/zhengy/347_test_a3\342M-^@M-^Y: File ) N
(exists) N
(~/347_test_a3 exists, use it anyway? \(y/n\) y) N
(Cloning into 'csci347_s23'...) N
(remote: Enumerating objects: 269, done.^[[K) N
(remote: Counting objects:   0% \(1/245\)^[[K) N
(remote: Counting objects:   1% \(3/245\)^[[K) N
(remote: Counting objects:   2% \(5/245\)^[[K) N
(remote: Counting objects:   3% \(8/245\)^[[K) N
(remote: Counting objects:   4% \(10/245\)^[[K) N
(remote: Counting objects:   5% \(13/245\)^[[K) N
(remote: Counting objects:   6% \(15/245\)^[[K) N
(remote: Counting objects:   7% \(18/245\)^[[K) N
(remote: Counting objects:   8% \(20/245\)^[[K) N
(remote: Counting objects:   9% \(23/245\)^[[K) N
(remote: Counting objects:  10% \(25/245\)^[[K) N
(remote: Counting objects:  11% \(27/245\)^[[K) N
(remote: Counting objects:  12% \(30/245\)^[[K) N
(remote: Counting objects:  13% \(32/245\)^[[K) N
(remote: Counting objects:  14% \(35/245\)^[[K) N
(remote: Counting objects:  15% \(37/245\)^[[K) N
(remote: Counting objects:  16% \(40/245\)^[[K) N
(remote: Counting objects:  17% \(42/245\)^[[K) N
(remote: Counting objects:  18% \(45/245\)^[[K) N
(remote: Counting objects:  19% \(47/245\)^[[K) N
(remote: Counting objects:  20% \(49/245\)^[[K) N
(remote: Counting objects:  21% \(52/245\)^[[K) N
(remote: Counting objects:  22% \(54/245\)^[[K) N
(remote: Counting objects:  23% \(57/245\)^[[K) N
(remote: Counting objects:  24% \(59/245\)^[[K) N
(remote: Counting objects:  25% \(62/245\)^[[K) N
(remote: Counting objects:  26% \(64/245\)^[[K) N
(remote: Counting objects:  27% \(67/245\)^[[K) N
(remote: Counting objects:  28% \(69/245\)^[[K) N
(remote: Counting objects:  29% \(72/245\)^[[K) N
(remote: Counting objects:  30% \(74/245\)^[[K) N
(remote: Counting objects:  31% \(76/245\)^[[K) N
(remote: Counting objects:  32% \(79/245\)^[[K) N
(remote: Counting objects:  33% \(81/245\)^[[K) N
(remote: Counting objects:  34% \(84/245\)^[[K) N
(remote: Counting objects:  35% \(86/245\)^[[K) N
(remote: Counting objects:  36% \(89/245\)^[[K) N
(remote: Counting objects:  37% \(91/245\)^[[K) N
(remote: Counting objects:  38% \(94/245\)^[[K) N
(remote: Counting objects:  39% \(96/245\)^[[K) N
(remote: Counting objects:  40% \(98/245\)^[[K) N
(remote: Counting objects:  41% \(101/245\)^[[K) N
(remote: Counting objects:  42% \(103/245\)^[[K) N
(remote: Counting objects:  43% \(106/245\)^[[K) N
(remote: Counting objects:  44% \(108/245\)^[[K) N
(remote: Counting objects:  45% \(111/245\)^[[K) N
(run_test) (Page 1/10) (May 01, 23 12:22) title
border
grestore
(Printed by Yang Zheng) rhead
() (Monday May 01, 2023) (16/25) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2) 17
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(remote: Counting objects:  46% \(113/245\)^[[K) p n
(remote: Counting objects:  47% \(116/245\)^[[K) N
(remote: Counting objects:  48% \(118/245\)^[[K) N
(remote: Counting objects:  49% \(121/245\)^[[K) N
(remote: Counting objects:  50% \(123/245\)^[[K) N
(remote: Counting objects:  51% \(125/245\)^[[K) N
(remote: Counting objects:  52% \(128/245\)^[[K) N
(remote: Counting objects:  53% \(130/245\)^[[K) N
(remote: Counting objects:  54% \(133/245\)^[[K) N
(remote: Counting objects:  55% \(135/245\)^[[K) N
(remote: Counting objects:  56% \(138/245\)^[[K) N
(remote: Counting objects:  57% \(140/245\)^[[K) N
(remote: Counting objects:  58% \(143/245\)^[[K) N
(remote: Counting objects:  59% \(145/245\)^[[K) N
(remote: Counting objects:  60% \(147/245\)^[[K) N
(remote: Counting objects:  61% \(150/245\)^[[K) N
(remote: Counting objects:  62% \(152/245\)^[[K) N
(remote: Counting objects:  63% \(155/245\)^[[K) N
(remote: Counting objects:  64% \(157/245\)^[[K) N
(remote: Counting objects:  65% \(160/245\)^[[K) N
(remote: Counting objects:  66% \(162/245\)^[[K) N
(remote: Counting objects:  67% \(165/245\)^[[K) N
(remote: Counting objects:  68% \(167/245\)^[[K) N
(remote: Counting objects:  69% \(170/245\)^[[K) N
(remote: Counting objects:  70% \(172/245\)^[[K) N
(remote: Counting objects:  71% \(174/245\)^[[K) N
(remote: Counting objects:  72% \(177/245\)^[[K) N
(remote: Counting objects:  73% \(179/245\)^[[K) N
(remote: Counting objects:  74% \(182/245\)^[[K) N
(remote: Counting objects:  75% \(184/245\)^[[K) N
(remote: Counting objects:  76% \(187/245\)^[[K) N
(remote: Counting objects:  77% \(189/245\)^[[K) N
(remote: Counting objects:  78% \(192/245\)^[[K) N
(remote: Counting objects:  79% \(194/245\)^[[K) N
(remote: Counting objects:  80% \(196/245\)^[[K) N
(remote: Counting objects:  81% \(199/245\)^[[K) N
(remote: Counting objects:  82% \(201/245\)^[[K) N
(remote: Counting objects:  83% \(204/245\)^[[K) N
(remote: Counting objects:  84% \(206/245\)^[[K) N
(remote: Counting objects:  85% \(209/245\)^[[K) N
(remote: Counting objects:  86% \(211/245\)^[[K) N
(remote: Counting objects:  87% \(214/245\)^[[K) N
(remote: Counting objects:  88% \(216/245\)^[[K) N
(remote: Counting objects:  89% \(219/245\)^[[K) N
(remote: Counting objects:  90% \(221/245\)^[[K) N
(remote: Counting objects:  91% \(223/245\)^[[K) N
(remote: Counting objects:  92% \(226/245\)^[[K) N
(remote: Counting objects:  93% \(228/245\)^[[K) N
(remote: Counting objects:  94% \(231/245\)^[[K) N
(remote: Counting objects:  95% \(233/245\)^[[K) N
(remote: Counting objects:  96% \(236/245\)^[[K) N
(remote: Counting objects:  97% \(238/245\)^[[K) N
(remote: Counting objects:  98% \(241/245\)^[[K) N
(remote: Counting objects:  99% \(243/245\)^[[K) N
(remote: Counting objects: 100% \(245/245\)^[[K) N
(remote: Counting objects: 100% \(245/245\), done.^[[K) N
(remote: Compressing objects:   0% \(1/241\)^[[K) N
(remote: Compressing objects:   1% \(3/241\)^[[K) N
(remote: Compressing objects:   2% \(5/241\)^[[K) N
(run_test) (Page 2/10) (May 01, 23 12:22) title
border
grestore
(Printed by Yang Zheng) rhead
() (17/25) (Monday May 01, 2023) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 18
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(remote: Compressing objects:   3% \(8/241\)^[[K) p n
(remote: Compressing objects:   4% \(10/241\)^[[K) N
(remote: Compressing objects:   5% \(13/241\)^[[K) N
(remote: Compressing objects:   6% \(15/241\)^[[K) N
(remote: Compressing objects:   7% \(17/241\)^[[K) N
(remote: Compressing objects:   8% \(20/241\)^[[K) N
(remote: Compressing objects:   9% \(22/241\)^[[K) N
(remote: Compressing objects:  10% \(25/241\)^[[K) N
(remote: Compressing objects:  11% \(27/241\)^[[K) N
(remote: Compressing objects:  12% \(29/241\)^[[K) N
(remote: Compressing objects:  13% \(32/241\)^[[K) N
(remote: Compressing objects:  14% \(34/241\)^[[K) N
(remote: Compressing objects:  15% \(37/241\)^[[K) N
(remote: Compressing objects:  16% \(39/241\)^[[K) N
(remote: Compressing objects:  17% \(41/241\)^[[K) N
(remote: Compressing objects:  18% \(44/241\)^[[K) N
(remote: Compressing objects:  19% \(46/241\)^[[K) N
(remote: Compressing objects:  20% \(49/241\)^[[K) N
(remote: Compressing objects:  21% \(51/241\)^[[K) N
(remote: Compressing objects:  22% \(54/241\)^[[K) N
(remote: Compressing objects:  23% \(56/241\)^[[K) N
(remote: Compressing objects:  24% \(58/241\)^[[K) N
(remote: Compressing objects:  25% \(61/241\)^[[K) N
(remote: Compressing objects:  26% \(63/241\)^[[K) N
(remote: Compressing objects:  27% \(66/241\)^[[K) N
(remote: Compressing objects:  28% \(68/241\)^[[K) N
(remote: Compressing objects:  29% \(70/241\)^[[K) N
(remote: Compressing objects:  30% \(73/241\)^[[K) N
(remote: Compressing objects:  31% \(75/241\)^[[K) N
(remote: Compressing objects:  32% \(78/241\)^[[K) N
(remote: Compressing objects:  33% \(80/241\)^[[K) N
(remote: Compressing objects:  34% \(82/241\)^[[K) N
(remote: Compressing objects:  35% \(85/241\)^[[K) N
(remote: Compressing objects:  36% \(87/241\)^[[K) N
(remote: Compressing objects:  37% \(90/241\)^[[K) N
(remote: Compressing objects:  38% \(92/241\)^[[K) N
(remote: Compressing objects:  39% \(94/241\)^[[K) N
(remote: Compressing objects:  40% \(97/241\)^[[K) N
(remote: Compressing objects:  41% \(99/241\)^[[K) N
(remote: Compressing objects:  42% \(102/241\)^[[K) N
(remote: Compressing objects:  43% \(104/241\)^[[K) N
(remote: Compressing objects:  44% \(107/241\)^[[K) N
(remote: Compressing objects:  45% \(109/241\)^[[K) N
(remote: Compressing objects:  46% \(111/241\)^[[K) N
(remote: Compressing objects:  47% \(114/241\)^[[K) N
(remote: Compressing objects:  48% \(116/241\)^[[K) N
(remote: Compressing objects:  49% \(119/241\)^[[K) N
(remote: Compressing objects:  50% \(121/241\)^[[K) N
(remote: Compressing objects:  51% \(123/241\)^[[K) N
(remote: Compressing objects:  52% \(126/241\)^[[K) N
(remote: Compressing objects:  53% \(128/241\)^[[K) N
(remote: Compressing objects:  54% \(131/241\)^[[K) N
(remote: Compressing objects:  55% \(133/241\)^[[K) N
(remote: Compressing objects:  56% \(135/241\)^[[K) N
(remote: Compressing objects:  57% \(138/241\)^[[K) N
(remote: Compressing objects:  58% \(140/241\)^[[K) N
(remote: Compressing objects:  59% \(143/241\)^[[K) N
(remote: Compressing objects:  60% \(145/241\)^[[K) N
(remote: Compressing objects:  61% \(148/241\)^[[K) N
(run_test) (Page 3/10) (May 01, 23 12:22) title
border
grestore
(Printed by Yang Zheng) rhead
() (Monday May 01, 2023) (18/25) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (4) 19
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(remote: Compressing objects:  62% \(150/241\)^[[K) p n
(remote: Compressing objects:  63% \(152/241\)^[[K) N
(remote: Compressing objects:  64% \(155/241\)^[[K) N
(remote: Compressing objects:  65% \(157/241\)^[[K) N
(remote: Compressing objects:  66% \(160/241\)^[[K) N
(remote: Compressing objects:  67% \(162/241\)^[[K) N
(remote: Compressing objects:  68% \(164/241\)^[[K) N
(remote: Compressing objects:  69% \(167/241\)^[[K) N
(remote: Compressing objects:  70% \(169/241\)^[[K) N
(remote: Compressing objects:  71% \(172/241\)^[[K) N
(remote: Compressing objects:  72% \(174/241\)^[[K) N
(remote: Compressing objects:  73% \(176/241\)^[[K) N
(remote: Compressing objects:  74% \(179/241\)^[[K) N
(remote: Compressing objects:  75% \(181/241\)^[[K) N
(remote: Compressing objects:  76% \(184/241\)^[[K) N
(remote: Compressing objects:  77% \(186/241\)^[[K) N
(remote: Compressing objects:  78% \(188/241\)^[[K) N
(remote: Compressing objects:  79% \(191/241\)^[[K) N
(remote: Compressing objects:  80% \(193/241\)^[[K) N
(remote: Compressing objects:  81% \(196/241\)^[[K) N
(remote: Compressing objects:  82% \(198/241\)^[[K) N
(remote: Compressing objects:  83% \(201/241\)^[[K) N
(remote: Compressing objects:  84% \(203/241\)^[[K) N
(remote: Compressing objects:  85% \(205/241\)^[[K) N
(remote: Compressing objects:  86% \(208/241\)^[[K) N
(remote: Compressing objects:  87% \(210/241\)^[[K) N
(remote: Compressing objects:  88% \(213/241\)^[[K) N
(remote: Compressing objects:  89% \(215/241\)^[[K) N
(remote: Compressing objects:  90% \(217/241\)^[[K) N
(remote: Compressing objects:  91% \(220/241\)^[[K) N
(remote: Compressing objects:  92% \(222/241\)^[[K) N
(remote: Compressing objects:  93% \(225/241\)^[[K) N
(remote: Compressing objects:  94% \(227/241\)^[[K) N
(remote: Compressing objects:  95% \(229/241\)^[[K) N
(remote: Compressing objects:  96% \(232/241\)^[[K) N
(remote: Compressing objects:  97% \(234/241\)^[[K) N
(remote: Compressing objects:  98% \(237/241\)^[[K) N
(remote: Compressing objects:  99% \(239/241\)^[[K) N
(remote: Compressing objects: 100% \(241/241\)^[[K) N
(remote: Compressing objects: 100% \(241/241\), done.^[[K) N
(Receiving objects:   0% \(1/269\)) N
(Receiving objects:   1% \(3/269\)) N
(Receiving objects:   2% \(6/269\)) N
(Receiving objects:   3% \(9/269\)) N
(Receiving objects:   4% \(11/269\)) N
(Receiving objects:   5% \(14/269\)) N
(Receiving objects:   6% \(17/269\)) N
(Receiving objects:   7% \(19/269\)) N
(Receiving objects:   8% \(22/269\)) N
(Receiving objects:   9% \(25/269\)) N
(Receiving objects:  10% \(27/269\)) N
(Receiving objects:  11% \(30/269\)) N
(Receiving objects:  12% \(33/269\)) N
(Receiving objects:  13% \(35/269\)) N
(Receiving objects:  14% \(38/269\)) N
(Receiving objects:  15% \(41/269\)) N
(Receiving objects:  16% \(44/269\)) N
(Receiving objects:  17% \(46/269\)) N
(Receiving objects:  18% \(49/269\)) N
(run_test) (Page 4/10) (May 01, 23 12:22) title
border
grestore
(Printed by Yang Zheng) rhead
() (19/25) (Monday May 01, 2023) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5) 20
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(Receiving objects:  19% \(52/269\)) p n
(Receiving objects:  20% \(54/269\)) N
(Receiving objects:  21% \(57/269\)) N
(Receiving objects:  22% \(60/269\)) N
(Receiving objects:  23% \(62/269\)) N
(Receiving objects:  24% \(65/269\)) N
(Receiving objects:  25% \(68/269\)) N
(Receiving objects:  26% \(70/269\)) N
(Receiving objects:  27% \(73/269\)) N
(Receiving objects:  28% \(76/269\)) N
(Receiving objects:  29% \(79/269\)) N
(Receiving objects:  30% \(81/269\)) N
(Receiving objects:  31% \(84/269\)) N
(Receiving objects:  32% \(87/269\)) N
(Receiving objects:  33% \(89/269\)) N
(Receiving objects:  34% \(92/269\)) N
(Receiving objects:  35% \(95/269\)) N
(Receiving objects:  36% \(97/269\)) N
(Receiving objects:  37% \(100/269\)) N
(Receiving objects:  38% \(103/269\)) N
(Receiving objects:  39% \(105/269\)) N
(Receiving objects:  40% \(108/269\)) N
(Receiving objects:  41% \(111/269\)) N
(Receiving objects:  42% \(113/269\)) N
(Receiving objects:  43% \(116/269\)) N
(Receiving objects:  44% \(119/269\)) N
(Receiving objects:  45% \(122/269\)) N
(Receiving objects:  46% \(124/269\)) N
(Receiving objects:  47% \(127/269\)) N
(Receiving objects:  48% \(130/269\)) N
(Receiving objects:  49% \(132/269\)) N
(Receiving objects:  50% \(135/269\)) N
(Receiving objects:  51% \(138/269\)) N
(Receiving objects:  52% \(140/269\)) N
(Receiving objects:  53% \(143/269\)) N
(Receiving objects:  54% \(146/269\)) N
(Receiving objects:  55% \(148/269\)) N
(Receiving objects:  56% \(151/269\)) N
(Receiving objects:  57% \(154/269\)) N
(Receiving objects:  58% \(157/269\)) N
(Receiving objects:  59% \(159/269\)) N
(Receiving objects:  60% \(162/269\)) N
(Receiving objects:  61% \(165/269\)) N
(Receiving objects:  62% \(167/269\)) N
(Receiving objects:  63% \(170/269\)) N
(Receiving objects:  64% \(173/269\)) N
(Receiving objects:  65% \(175/269\)) N
(Receiving objects:  66% \(178/269\)) N
(Receiving objects:  67% \(181/269\)) N
(Receiving objects:  68% \(183/269\)) N
(Receiving objects:  69% \(186/269\)) N
(Receiving objects:  70% \(189/269\)) N
(Receiving objects:  71% \(191/269\)) N
(Receiving objects:  72% \(194/269\)) N
(Receiving objects:  73% \(197/269\)) N
(Receiving objects:  74% \(200/269\)) N
(Receiving objects:  75% \(202/269\)) N
(Receiving objects:  76% \(205/269\)) N
(Receiving objects:  77% \(208/269\)) N
(run_test) (Page 5/10) (May 01, 23 12:22) title
border
grestore
(Printed by Yang Zheng) rhead
() (Monday May 01, 2023) (20/25) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (6) 21
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(Receiving objects:  78% \(210/269\)) p n
(Receiving objects:  79% \(213/269\)) N
(Receiving objects:  80% \(216/269\)) N
(Receiving objects:  81% \(218/269\)) N
(Receiving objects:  82% \(221/269\)) N
(Receiving objects:  83% \(224/269\)) N
(Receiving objects:  84% \(226/269\)) N
(Receiving objects:  85% \(229/269\)) N
(Receiving objects:  86% \(232/269\)) N
(Receiving objects:  87% \(235/269\)) N
(Receiving objects:  88% \(237/269\)) N
(Receiving objects:  89% \(240/269\)) N
(Receiving objects:  90% \(243/269\)) N
(Receiving objects:  91% \(245/269\)) N
(Receiving objects:  92% \(248/269\)) N
(Receiving objects:  93% \(251/269\)) N
(Receiving objects:  94% \(253/269\)) N
(Receiving objects:  95% \(256/269\)) N
(remote: Total 269 \(delta 147\), reused 0 \(delta 0\), pack-reused 24^[[K) N
(Receiving objects:  96% \(259/269\)) N
(Receiving objects:  97% \(261/269\)) N
(Receiving objects:  98% \(264/269\)) N
(Receiving objects:  99% \(267/269\)) N
(Receiving objects: 100% \(269/269\)) N
(Receiving objects: 100% \(269/269\), 244.23 KiB | 2.87 MiB/s, done.) N
(Resolving deltas:   0% \(0/153\)) N
(Resolving deltas:   1% \(2/153\)) N
(Resolving deltas:   2% \(4/153\)) N
(Resolving deltas:   3% \(5/153\)) N
(Resolving deltas:   4% \(7/153\)) N
(Resolving deltas:   5% \(8/153\)) N
(Resolving deltas:   6% \(10/153\)) N
(Resolving deltas:   7% \(11/153\)) N
(Resolving deltas:   8% \(13/153\)) N
(Resolving deltas:   9% \(14/153\)) N
(Resolving deltas:  10% \(16/153\)) N
(Resolving deltas:  11% \(17/153\)) N
(Resolving deltas:  12% \(19/153\)) N
(Resolving deltas:  13% \(20/153\)) N
(Resolving deltas:  14% \(22/153\)) N
(Resolving deltas:  15% \(23/153\)) N
(Resolving deltas:  16% \(25/153\)) N
(Resolving deltas:  17% \(27/153\)) N
(Resolving deltas:  18% \(28/153\)) N
(Resolving deltas:  19% \(30/153\)) N
(Resolving deltas:  20% \(31/153\)) N
(Resolving deltas:  21% \(33/153\)) N
(Resolving deltas:  22% \(34/153\)) N
(Resolving deltas:  23% \(36/153\)) N
(Resolving deltas:  24% \(37/153\)) N
(Resolving deltas:  25% \(39/153\)) N
(Resolving deltas:  26% \(40/153\)) N
(Resolving deltas:  27% \(42/153\)) N
(Resolving deltas:  28% \(43/153\)) N
(Resolving deltas:  29% \(45/153\)) N
(Resolving deltas:  30% \(46/153\)) N
(Resolving deltas:  31% \(48/153\)) N
(Resolving deltas:  32% \(49/153\)) N
(Resolving deltas:  33% \(51/153\)) N
(run_test) (Page 6/10) (May 01, 23 12:22) title
border
grestore
(Printed by Yang Zheng) rhead
() (21/25) (Monday May 01, 2023) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (7) 22
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(Resolving deltas:  34% \(53/153\)) p n
(Resolving deltas:  35% \(54/153\)) N
(Resolving deltas:  36% \(56/153\)) N
(Resolving deltas:  37% \(57/153\)) N
(Resolving deltas:  38% \(59/153\)) N
(Resolving deltas:  39% \(60/153\)) N
(Resolving deltas:  40% \(62/153\)) N
(Resolving deltas:  41% \(63/153\)) N
(Resolving deltas:  42% \(65/153\)) N
(Resolving deltas:  43% \(66/153\)) N
(Resolving deltas:  44% \(68/153\)) N
(Resolving deltas:  45% \(69/153\)) N
(Resolving deltas:  46% \(71/153\)) N
(Resolving deltas:  47% \(72/153\)) N
(Resolving deltas:  48% \(74/153\)) N
(Resolving deltas:  49% \(75/153\)) N
(Resolving deltas:  50% \(77/153\)) N
(Resolving deltas:  51% \(79/153\)) N
(Resolving deltas:  52% \(81/153\)) N
(Resolving deltas:  53% \(82/153\)) N
(Resolving deltas:  54% \(83/153\)) N
(Resolving deltas:  55% \(85/153\)) N
(Resolving deltas:  56% \(86/153\)) N
(Resolving deltas:  57% \(88/153\)) N
(Resolving deltas:  58% \(89/153\)) N
(Resolving deltas:  59% \(91/153\)) N
(Resolving deltas:  60% \(92/153\)) N
(Resolving deltas:  61% \(94/153\)) N
(Resolving deltas:  62% \(95/153\)) N
(Resolving deltas:  63% \(97/153\)) N
(Resolving deltas:  64% \(98/153\)) N
(Resolving deltas:  65% \(100/153\)) N
(Resolving deltas:  66% \(101/153\)) N
(Resolving deltas:  67% \(103/153\)) N
(Resolving deltas:  68% \(105/153\)) N
(Resolving deltas:  69% \(106/153\)) N
(Resolving deltas:  70% \(108/153\)) N
(Resolving deltas:  71% \(109/153\)) N
(Resolving deltas:  72% \(111/153\)) N
(Resolving deltas:  73% \(112/153\)) N
(Resolving deltas:  74% \(114/153\)) N
(Resolving deltas:  75% \(115/153\)) N
(Resolving deltas:  76% \(117/153\)) N
(Resolving deltas:  77% \(118/153\)) N
(Resolving deltas:  78% \(120/153\)) N
(Resolving deltas:  79% \(121/153\)) N
(Resolving deltas:  80% \(123/153\)) N
(Resolving deltas:  81% \(124/153\)) N
(Resolving deltas:  82% \(126/153\)) N
(Resolving deltas:  83% \(127/153\)) N
(Resolving deltas:  84% \(129/153\)) N
(Resolving deltas:  85% \(131/153\)) N
(Resolving deltas:  86% \(132/153\)) N
(Resolving deltas:  87% \(134/153\)) N
(Resolving deltas:  88% \(135/153\)) N
(Resolving deltas:  89% \(137/153\)) N
(Resolving deltas:  90% \(138/153\)) N
(Resolving deltas:  91% \(140/153\)) N
(Resolving deltas:  92% \(141/153\)) N
(run_test) (Page 7/10) (May 01, 23 12:22) title
border
grestore
(Printed by Yang Zheng) rhead
() (Monday May 01, 2023) (22/25) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (8) 23
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(Resolving deltas:  93% \(143/153\)) p n
(Resolving deltas:  94% \(144/153\)) N
(Resolving deltas:  95% \(146/153\)) N
(Resolving deltas:  96% \(147/153\)) N
(Resolving deltas:  97% \(149/153\)) N
(Resolving deltas:  98% \(150/153\)) N
(Resolving deltas:  99% \(152/153\)) N
(Resolving deltas: 100% \(153/153\)) N
(Resolving deltas: 100% \(153/153\), done.) N
(Branch 'a3' set up to track remote branch 'a3' from 'origin'.) N
(Switched to a new branch 'a3') N
(Making REF) N
(gcc -g -Wall -c builtin.c) N
(gcc -g -Wall -c strmode.c) N
(gcc -g -Wall -o ush ush.o expand.o builtin.o strmode.o) N
() N
(run tests? y) N
(Running ush) N
() N
(./try: line 189: 647121 Segmentation fault      ./ush < ${TOP}/ush.test > OUT 2>) N
( ERRS) N
(Files REF and OUT differ) N
(Script output different!) N
(Diffs: ) N
(--- REF) S 8 T (2023-05-01 12:22:14.045020643 -0700) N
(+++ OUT) S 8 T (2023-05-01 12:22:16.469024182 -0700) N
(@@ -1,56 +1,2 @@) N
( ) N
( This test script is run with 1 args, script is ./ush, should be interactive.) N
(-Testing args!) N
(-Script name is /home/phil/public/csci347/testa3/scr1.) N
(-There are 4 number of parameters.) N
(-Dollar 1 is 'with', 2 is 'some'.) N
(-'/home/phil/public/csci347/testa3/scr1' is the script name.) N
(-Testing args!) N
(-Script name is /home/phil/public/csci347/testa3/scr1.) N
(-There are 2 number of parameters.) N
(-Dollar 1 is 'with_one_arg', 2 is ''.) N
(-'/home/phil/public/csci347/testa3/scr1' is the script name.) N
(-Testing shift ...) N
(-Script name is /home/phil/public/csci347/testa3/scr2.) N
(-There are 11 number of parameters.) N
(-Dollar 1-4 is arg1, arg2, arg3, and arg4.) N
(-Shifting 1) N
(-There are 10 number of parameters.) N
(-Dollar 1-4 is arg2, arg3, arg4, and arg5.) N
(-Shifting 2) N
(-There are 8 number of parameters.) N
(-Dollar 1-4 is arg4, arg5, arg6, and arg7.) N
(-Shifting 4) N
(-There are 4 number of parameters.) N
(-There are 5 number of parameters.) N
(-Dollar 1-2 is arg7 and arg8.) N
(-There are 7 number of parameters.) N
(-Dollar 1-4 is arg5, arg6, arg7, and arg8.) N
(-There are 11 number of parameters.) N
(-Dollar 1-4 is arg1, arg2, arg3, and arg4.) N
(-There are 21 arguments.) N
(-Argument 13 is 'This_is_thirteen!'.) N
(run_test) (Page 8/10) (May 01, 23 12:22) title
border
grestore
(Printed by Yang Zheng) rhead
() (23/25) (Monday May 01, 2023) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (9) 24
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(-Testing Wildcards and sstat ...) p n
(-) N
(-1abc 2acc 3.h 3adc 4a?c a.c aaaaaaa.c b.c c..c d.cc e.b f.q) N
(-d.cc) N
(-a*) N
(-*a) N
(-1abc 2acc 3adc 4a?c a.c aaaaaaa.c b.c c..c d.cc) N
(-c..c) N
(-3.h) N
(-aaaaaaa.c) N
(-*.c) N
(-4a?c) N
(-a.c aaaaaaa.c) N
(-) N
(-Now for sstat) N
(-) N
(-d.cc zhengy grp.csci.Students -rw--w---x 1 0 Sun May  1 00:00:00 2005) N
(-f.q zhengy grp.csci.Students -rw--w---x 1 0 Sun May  1 00:00:00 2005) N
(-/home/phil/zzz.file 333 333 -rwx------ 1 0 Mon Oct 31 15:46:23 2011) N
(-a.c zhengy grp.csci.Students -rw--w---x 1 0 Sun May  1 00:00:00 2005) N
(-b.c zhengy grp.csci.Students -rw--w---x 1 0 Sun May  1 00:00:00 2005) N
(-d.cc zhengy grp.csci.Students -rw--w---x 1 0 Sun May  1 00:00:00 2005) N
(-End testing Wildcards and sstat ...) N
(-Done with regular tests) N
() N
(See Out file? y) N
(Out is: -------) N
() N
(This test script is run with 1 args, script is ./ush, should be interactive.) N
(---------------) N
(Exit values incorrect) N
(Bad exit value on end of script.) N
() N
(----- ERRS -----) N
(% % % % ) N
(----------------) N
() N
(Run error tests? y) N
(orig: ) N
(orig: echo Testing errors with $0 and $# arguments \(should be 5\)) N
(p_arr[0]: echo) N
(Testing errors with /home/phil/public/csci347/testa3/ush.err and 5 arguments \(sh) N
(ould be 5\)) N
(orig: envset N $#) N
(orig: echo Initial arguments are $1, $2, $3, and $4.) N
(p_arr[0]: echo) N
(Initial arguments are arg1, arg2, arg3, and arg4.) N
(orig: echo Doing a shift of 4 \(no error\)) N
(p_arr[0]: echo) N
(Doing a shift of 4 \(no error\)) N
(orig: shift 4) N
(orig: echo We now have $# argument, arg1 is '$1'.) N
(p_arr[0]: echo) N
(We now have 1 argument, arg1 is ''.) N
(orig: echo Doing a shift of 4 and 1  \(should be errors\)) N
(p_arr[0]: echo) N
(Doing a shift of 4 and 1 \(should be errors\)) N
(orig: shift 4) N
(can't shift that many arguments) N
(run_test) (Page 9/10) (May 01, 23 12:22) title
border
grestore
(Printed by Yang Zheng) rhead
() (Monday May 01, 2023) (24/25) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (10) 25
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(orig: shift) p n
(orig: echo Now doing 'unshift 5' \(should be an error\)) N
(p_arr[0]: echo) N
(Now doing 'unshift 5' \(should be an error\)) N
(orig: unshift 5) N
(can't unshift that many arguments) N
(orig: unshift) N
(orig: echo Did an unshift ... number of args is $#, should be ${N}.) N
(end is at: 58) N
(p_arr[0]: echo) N
(Did an unshift ... number of args is 5, should be 5.) N
(orig: echo Testing sstat errors) N
(p_arr[0]: echo) N
(Testing sstat errors) N
(orig: sstat notafile) N
(orig: echo End of error tests) N
(p_arr[0]: echo) N
(End of error tests) N
() N
() N
(Look at checked out files? y) N
(^[[?2004h^[]0;zhengy@cf162-07: ~/347_test_a3/csci347_s23/ush^G^[[01;32mzhengy@cf) N
(162-07^[[00m:^[[01;34m~/347_test_a3/csci347_s23/ush^[[00m$ exit) N
(^[[?2004l) N
(exit) N
(Clean? y) N
(cleaning) N
(removing ~/347_test_a3) N
(% ^C) N
(^[[?2004h^[]0;zhengy@cf162-07: ~/csci347/csci347_s23/ush^G^[[01;32mzhengy@cf162-) N
(07^[[00m:^[[01;34m~/csci347/csci347_s23/ush^[[00m$ exit) N
(^[[?2004l) N
(exit) N
() N
(Script done on 2023-05-01 12:22:42-07:00 [COMMAND_EXIT_CODE="130"]) N
(run_test) (Page 10/10) (May 01, 23 12:22) title
border
grestore
(Printed by Yang Zheng) rhead
() (25/25) (Monday May 01, 2023) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
